{"version":3,"file":"intl-universal.min.js","sources":["../node_modules/_intl-messageformat@2.2.0@intl-messageformat/src/utils.js","../node_modules/_intl-messageformat@2.2.0@intl-messageformat/src/compiler.js","../node_modules/_intl-messageformat@2.2.0@intl-messageformat/src/core.js","../node_modules/_rollup-plugin-node-builtins@2.1.2@rollup-plugin-node-builtins/src/es6/qs.js","../node_modules/_intl-messageformat@2.2.0@intl-messageformat/src/es5.js","../node_modules/_intl-messageformat-parser@1.4.0@intl-messageformat-parser/src/parser.js","../node_modules/_intl-messageformat@2.2.0@intl-messageformat/src/main.js","../node_modules/_intl-messageformat@2.2.0@intl-messageformat/src/en.js","../src/index.js","../node_modules/_escape-html@1.0.3@escape-html/index.js","../node_modules/_cookie@0.3.1@cookie/index.js"],"sourcesContent":["/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport var hop = Object.prototype.hasOwnProperty;\n\nexport function extend(obj) {\n    var sources = Array.prototype.slice.call(arguments, 1),\n        i, len, source, key;\n\n    for (i = 0, len = sources.length; i < len; i += 1) {\n        source = sources[i];\n        if (!source) { continue; }\n\n        for (key in source) {\n            if (hop.call(source, key)) {\n                obj[key] = source[key];\n            }\n        }\n    }\n\n    return obj;\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport default Compiler;\n\nfunction Compiler(locales, formats, pluralFn) {\n    this.locales  = locales;\n    this.formats  = formats;\n    this.pluralFn = pluralFn;\n}\n\nCompiler.prototype.compile = function (ast) {\n    this.pluralStack        = [];\n    this.currentPlural      = null;\n    this.pluralNumberFormat = null;\n\n    return this.compileMessage(ast);\n};\n\nCompiler.prototype.compileMessage = function (ast) {\n    if (!(ast && ast.type === 'messageFormatPattern')) {\n        throw new Error('Message AST is not of type: \"messageFormatPattern\"');\n    }\n\n    var elements = ast.elements,\n        pattern  = [];\n\n    var i, len, element;\n\n    for (i = 0, len = elements.length; i < len; i += 1) {\n        element = elements[i];\n\n        switch (element.type) {\n            case 'messageTextElement':\n                pattern.push(this.compileMessageText(element));\n                break;\n\n            case 'argumentElement':\n                pattern.push(this.compileArgument(element));\n                break;\n\n            default:\n                throw new Error('Message element does not have a valid type');\n        }\n    }\n\n    return pattern;\n};\n\nCompiler.prototype.compileMessageText = function (element) {\n    // When this `element` is part of plural sub-pattern and its value contains\n    // an unescaped '#', use a `PluralOffsetString` helper to properly output\n    // the number with the correct offset in the string.\n    if (this.currentPlural && /(^|[^\\\\])#/g.test(element.value)) {\n        // Create a cache a NumberFormat instance that can be reused for any\n        // PluralOffsetString instance in this message.\n        if (!this.pluralNumberFormat) {\n            this.pluralNumberFormat = new Intl.NumberFormat(this.locales);\n        }\n\n        return new PluralOffsetString(\n                this.currentPlural.id,\n                this.currentPlural.format.offset,\n                this.pluralNumberFormat,\n                element.value);\n    }\n\n    // Unescape the escaped '#'s in the message text.\n    return element.value.replace(/\\\\#/g, '#');\n};\n\nCompiler.prototype.compileArgument = function (element) {\n    var format = element.format;\n\n    if (!format) {\n        return new StringFormat(element.id);\n    }\n\n    var formats  = this.formats,\n        locales  = this.locales,\n        pluralFn = this.pluralFn,\n        options;\n\n    switch (format.type) {\n        case 'numberFormat':\n            options = formats.number[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.NumberFormat(locales, options).format\n            };\n\n        case 'dateFormat':\n            options = formats.date[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.DateTimeFormat(locales, options).format\n            };\n\n        case 'timeFormat':\n            options = formats.time[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.DateTimeFormat(locales, options).format\n            };\n\n        case 'pluralFormat':\n            options = this.compileOptions(element);\n            return new PluralFormat(\n                element.id, format.ordinal, format.offset, options, pluralFn\n            );\n\n        case 'selectFormat':\n            options = this.compileOptions(element);\n            return new SelectFormat(element.id, options);\n\n        default:\n            throw new Error('Message element does not have a valid format type');\n    }\n};\n\nCompiler.prototype.compileOptions = function (element) {\n    var format      = element.format,\n        options     = format.options,\n        optionsHash = {};\n\n    // Save the current plural element, if any, then set it to a new value when\n    // compiling the options sub-patterns. This conforms the spec's algorithm\n    // for handling `\"#\"` syntax in message text.\n    this.pluralStack.push(this.currentPlural);\n    this.currentPlural = format.type === 'pluralFormat' ? element : null;\n\n    var i, len, option;\n\n    for (i = 0, len = options.length; i < len; i += 1) {\n        option = options[i];\n\n        // Compile the sub-pattern and save it under the options's selector.\n        optionsHash[option.selector] = this.compileMessage(option.value);\n    }\n\n    // Pop the plural stack to put back the original current plural value.\n    this.currentPlural = this.pluralStack.pop();\n\n    return optionsHash;\n};\n\n// -- Compiler Helper Classes --------------------------------------------------\n\nfunction StringFormat(id) {\n    this.id = id;\n}\n\nStringFormat.prototype.format = function (value) {\n    if (!value && typeof value !== 'number') {\n        return '';\n    }\n\n    return typeof value === 'string' ? value : String(value);\n};\n\nfunction PluralFormat(id, useOrdinal, offset, options, pluralFn) {\n    this.id         = id;\n    this.useOrdinal = useOrdinal;\n    this.offset     = offset;\n    this.options    = options;\n    this.pluralFn   = pluralFn;\n}\n\nPluralFormat.prototype.getOption = function (value) {\n    var options = this.options;\n\n    var option = options['=' + value] ||\n            options[this.pluralFn(value - this.offset, this.useOrdinal)];\n\n    return option || options.other;\n};\n\nfunction PluralOffsetString(id, offset, numberFormat, string) {\n    this.id           = id;\n    this.offset       = offset;\n    this.numberFormat = numberFormat;\n    this.string       = string;\n}\n\nPluralOffsetString.prototype.format = function (value) {\n    var number = this.numberFormat.format(value - this.offset);\n\n    return this.string\n            .replace(/(^|[^\\\\])#/g, '$1' + number)\n            .replace(/\\\\#/g, '#');\n};\n\nfunction SelectFormat(id, options) {\n    this.id      = id;\n    this.options = options;\n}\n\nSelectFormat.prototype.getOption = function (value) {\n    var options = this.options;\n    return options[value] || options.other;\n};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport {extend, hop} from './utils';\nimport {defineProperty, objCreate} from './es5';\nimport Compiler from './compiler';\nimport parser from 'intl-messageformat-parser';\n\nexport default MessageFormat;\n\n// -- MessageFormat --------------------------------------------------------\n\nfunction MessageFormat(message, locales, formats) {\n    // Parse string messages into an AST.\n    var ast = typeof message === 'string' ?\n            MessageFormat.__parse(message) : message;\n\n    if (!(ast && ast.type === 'messageFormatPattern')) {\n        throw new TypeError('A message must be provided as a String or AST.');\n    }\n\n    // Creates a new object with the specified `formats` merged with the default\n    // formats.\n    formats = this._mergeFormats(MessageFormat.formats, formats);\n\n    // Defined first because it's used to build the format pattern.\n    defineProperty(this, '_locale',  {value: this._resolveLocale(locales)});\n\n    // Compile the `ast` to a pattern that is highly optimized for repeated\n    // `format()` invocations. **Note:** This passes the `locales` set provided\n    // to the constructor instead of just the resolved locale.\n    var pluralFn = this._findPluralRuleFunction(this._locale);\n    var pattern  = this._compilePattern(ast, locales, formats, pluralFn);\n\n    // \"Bind\" `format()` method to `this` so it can be passed by reference like\n    // the other `Intl` APIs.\n    var messageFormat = this;\n    this.format = function (values) {\n      try {\n        return messageFormat._format(pattern, values);\n      } catch (e) {\n        if (e.variableId) {\n          throw new Error(\n            'The intl string context variable \\'' + e.variableId + '\\'' +\n            ' was not provided to the string \\'' + message + '\\''\n          );\n        } else {\n          throw e;\n        }\n      }\n    };\n}\n\n// Default format options used as the prototype of the `formats` provided to the\n// constructor. These are used when constructing the internal Intl.NumberFormat\n// and Intl.DateTimeFormat instances.\ndefineProperty(MessageFormat, 'formats', {\n    enumerable: true,\n\n    value: {\n        number: {\n            'currency': {\n                style: 'currency'\n            },\n\n            'percent': {\n                style: 'percent'\n            }\n        },\n\n        date: {\n            'short': {\n                month: 'numeric',\n                day  : 'numeric',\n                year : '2-digit'\n            },\n\n            'medium': {\n                month: 'short',\n                day  : 'numeric',\n                year : 'numeric'\n            },\n\n            'long': {\n                month: 'long',\n                day  : 'numeric',\n                year : 'numeric'\n            },\n\n            'full': {\n                weekday: 'long',\n                month  : 'long',\n                day    : 'numeric',\n                year   : 'numeric'\n            }\n        },\n\n        time: {\n            'short': {\n                hour  : 'numeric',\n                minute: 'numeric'\n            },\n\n            'medium':  {\n                hour  : 'numeric',\n                minute: 'numeric',\n                second: 'numeric'\n            },\n\n            'long': {\n                hour        : 'numeric',\n                minute      : 'numeric',\n                second      : 'numeric',\n                timeZoneName: 'short'\n            },\n\n            'full': {\n                hour        : 'numeric',\n                minute      : 'numeric',\n                second      : 'numeric',\n                timeZoneName: 'short'\n            }\n        }\n    }\n});\n\n// Define internal private properties for dealing with locale data.\ndefineProperty(MessageFormat, '__localeData__', {value: objCreate(null)});\ndefineProperty(MessageFormat, '__addLocaleData', {value: function (data) {\n    if (!(data && data.locale)) {\n        throw new Error(\n            'Locale data provided to IntlMessageFormat is missing a ' +\n            '`locale` property'\n        );\n    }\n\n    MessageFormat.__localeData__[data.locale.toLowerCase()] = data;\n}});\n\n// Defines `__parse()` static method as an exposed private.\ndefineProperty(MessageFormat, '__parse', {value: parser.parse});\n\n// Define public `defaultLocale` property which defaults to English, but can be\n// set by the developer.\ndefineProperty(MessageFormat, 'defaultLocale', {\n    enumerable: true,\n    writable  : true,\n    value     : undefined\n});\n\nMessageFormat.prototype.resolvedOptions = function () {\n    // TODO: Provide anything else?\n    return {\n        locale: this._locale\n    };\n};\n\nMessageFormat.prototype._compilePattern = function (ast, locales, formats, pluralFn) {\n    var compiler = new Compiler(locales, formats, pluralFn);\n    return compiler.compile(ast);\n};\n\nMessageFormat.prototype._findPluralRuleFunction = function (locale) {\n    var localeData = MessageFormat.__localeData__;\n    var data       = localeData[locale.toLowerCase()];\n\n    // The locale data is de-duplicated, so we have to traverse the locale's\n    // hierarchy until we find a `pluralRuleFunction` to return.\n    while (data) {\n        if (data.pluralRuleFunction) {\n            return data.pluralRuleFunction;\n        }\n\n        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];\n    }\n\n    throw new Error(\n        'Locale data added to IntlMessageFormat is missing a ' +\n        '`pluralRuleFunction` for :' + locale\n    );\n};\n\nMessageFormat.prototype._format = function (pattern, values) {\n    var result = '',\n        i, len, part, id, value, err;\n\n    for (i = 0, len = pattern.length; i < len; i += 1) {\n        part = pattern[i];\n\n        // Exist early for string parts.\n        if (typeof part === 'string') {\n            result += part;\n            continue;\n        }\n\n        id = part.id;\n\n        // Enforce that all required values are provided by the caller.\n        if (!(values && hop.call(values, id))) {\n          err = new Error('A value must be provided for: ' + id);\n          err.variableId = id;\n          throw err;\n        }\n\n        value = values[id];\n\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (part.options) {\n            result += this._format(part.getOption(value), values);\n        } else {\n            result += part.format(value);\n        }\n    }\n\n    return result;\n};\n\nMessageFormat.prototype._mergeFormats = function (defaults, formats) {\n    var mergedFormats = {},\n        type, mergedType;\n\n    for (type in defaults) {\n        if (!hop.call(defaults, type)) { continue; }\n\n        mergedFormats[type] = mergedType = objCreate(defaults[type]);\n\n        if (formats && hop.call(formats, type)) {\n            extend(mergedType, formats[type]);\n        }\n    }\n\n    return mergedFormats;\n};\n\nMessageFormat.prototype._resolveLocale = function (locales) {\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n\n    // Create a copy of the array so we can push on the default locale.\n    locales = (locales || []).concat(MessageFormat.defaultLocale);\n\n    var localeData = MessageFormat.__localeData__;\n    var i, len, localeParts, data;\n\n    // Using the set of locales + the default locale, we look for the first one\n    // which that has been registered. When data does not exist for a locale, we\n    // traverse its ancestors to find something that's been registered within\n    // its hierarchy of locales. Since we lack the proper `parentLocale` data\n    // here, we must take a naive approach to traversal.\n    for (i = 0, len = locales.length; i < len; i += 1) {\n        localeParts = locales[i].toLowerCase().split('-');\n\n        while (localeParts.length) {\n            data = localeData[localeParts.join('-')];\n            if (data) {\n                // Return the normalized locale string; e.g., we return \"en-US\",\n                // instead of \"en-us\".\n                return data.locale;\n            }\n\n            localeParts.pop();\n        }\n    }\n\n    var defaultLocale = locales.pop();\n    throw new Error(\n        'No locale data has been added to IntlMessageFormat for: ' +\n        locales.join(', ') + ', or the default locale: ' + defaultLocale\n    );\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\nfunction stringifyPrimitive(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n}\n\nexport function stringify (obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\nexport function parse(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\nexport default {\n  encode: stringify,\n  stringify: stringify,\n  decode: parse,\n  parse: parse\n}\nexport {stringify as encode, parse as decode};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport {hop} from './utils';\n\n// Purposely using the same implementation as the Intl.js `Intl` polyfill.\n// Copyright 2013 Andy Earnshaw, MIT License\n\nvar realDefineProp = (function () {\n    try { return !!Object.defineProperty({}, 'a', {}); }\n    catch (e) { return false; }\n})();\n\nvar es3 = !realDefineProp && !Object.prototype.__defineGetter__;\n\nvar defineProperty = realDefineProp ? Object.defineProperty :\n        function (obj, name, desc) {\n\n    if ('get' in desc && obj.__defineGetter__) {\n        obj.__defineGetter__(name, desc.get);\n    } else if (!hop.call(obj, name) || 'value' in desc) {\n        obj[name] = desc.value;\n    }\n};\n\nvar objCreate = Object.create || function (proto, props) {\n    var obj, k;\n\n    function F() {}\n    F.prototype = proto;\n    obj = new F();\n\n    for (k in props) {\n        if (hop.call(props, k)) {\n            defineProperty(obj, k, props[k]);\n        }\n    }\n\n    return obj;\n};\n\nexport {defineProperty, objCreate};\n","export default (function() {\n  \"use strict\";\n\n  /*\n   * Generated by PEG.js 0.9.0.\n   *\n   * http://pegjs.org/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  function peg$parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n        parser  = this,\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = function(elements) {\n                return {\n                    type    : 'messageFormatPattern',\n                    elements: elements,\n                    location: location()\n                };\n            },\n        peg$c1 = function(text) {\n                var string = '',\n                    i, j, outerLen, inner, innerLen;\n\n                for (i = 0, outerLen = text.length; i < outerLen; i += 1) {\n                    inner = text[i];\n\n                    for (j = 0, innerLen = inner.length; j < innerLen; j += 1) {\n                        string += inner[j];\n                    }\n                }\n\n                return string;\n            },\n        peg$c2 = function(messageText) {\n                return {\n                    type : 'messageTextElement',\n                    value: messageText,\n                    location: location()\n                };\n            },\n        peg$c3 = /^[^ \\t\\n\\r,.+={}#]/,\n        peg$c4 = { type: \"class\", value: \"[^ \\\\t\\\\n\\\\r,.+={}#]\", description: \"[^ \\\\t\\\\n\\\\r,.+={}#]\" },\n        peg$c5 = \"{\",\n        peg$c6 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c7 = \",\",\n        peg$c8 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c9 = \"}\",\n        peg$c10 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c11 = function(id, format) {\n                return {\n                    type  : 'argumentElement',\n                    id    : id,\n                    format: format && format[2],\n                    location: location()\n                };\n            },\n        peg$c12 = \"number\",\n        peg$c13 = { type: \"literal\", value: \"number\", description: \"\\\"number\\\"\" },\n        peg$c14 = \"date\",\n        peg$c15 = { type: \"literal\", value: \"date\", description: \"\\\"date\\\"\" },\n        peg$c16 = \"time\",\n        peg$c17 = { type: \"literal\", value: \"time\", description: \"\\\"time\\\"\" },\n        peg$c18 = function(type, style) {\n                return {\n                    type : type + 'Format',\n                    style: style && style[2],\n                    location: location()\n                };\n            },\n        peg$c19 = \"plural\",\n        peg$c20 = { type: \"literal\", value: \"plural\", description: \"\\\"plural\\\"\" },\n        peg$c21 = function(pluralStyle) {\n                return {\n                    type   : pluralStyle.type,\n                    ordinal: false,\n                    offset : pluralStyle.offset || 0,\n                    options: pluralStyle.options,\n                    location: location()\n                };\n            },\n        peg$c22 = \"selectordinal\",\n        peg$c23 = { type: \"literal\", value: \"selectordinal\", description: \"\\\"selectordinal\\\"\" },\n        peg$c24 = function(pluralStyle) {\n                return {\n                    type   : pluralStyle.type,\n                    ordinal: true,\n                    offset : pluralStyle.offset || 0,\n                    options: pluralStyle.options,\n                    location: location()\n                }\n            },\n        peg$c25 = \"select\",\n        peg$c26 = { type: \"literal\", value: \"select\", description: \"\\\"select\\\"\" },\n        peg$c27 = function(options) {\n                return {\n                    type   : 'selectFormat',\n                    options: options,\n                    location: location()\n                };\n            },\n        peg$c28 = \"=\",\n        peg$c29 = { type: \"literal\", value: \"=\", description: \"\\\"=\\\"\" },\n        peg$c30 = function(selector, pattern) {\n                return {\n                    type    : 'optionalFormatPattern',\n                    selector: selector,\n                    value   : pattern,\n                    location: location()\n                };\n            },\n        peg$c31 = \"offset:\",\n        peg$c32 = { type: \"literal\", value: \"offset:\", description: \"\\\"offset:\\\"\" },\n        peg$c33 = function(number) {\n                return number;\n            },\n        peg$c34 = function(offset, options) {\n                return {\n                    type   : 'pluralFormat',\n                    offset : offset,\n                    options: options,\n                    location: location()\n                };\n            },\n        peg$c35 = { type: \"other\", description: \"whitespace\" },\n        peg$c36 = /^[ \\t\\n\\r]/,\n        peg$c37 = { type: \"class\", value: \"[ \\\\t\\\\n\\\\r]\", description: \"[ \\\\t\\\\n\\\\r]\" },\n        peg$c38 = { type: \"other\", description: \"optionalWhitespace\" },\n        peg$c39 = /^[0-9]/,\n        peg$c40 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c41 = /^[0-9a-f]/i,\n        peg$c42 = { type: \"class\", value: \"[0-9a-f]i\", description: \"[0-9a-f]i\" },\n        peg$c43 = \"0\",\n        peg$c44 = { type: \"literal\", value: \"0\", description: \"\\\"0\\\"\" },\n        peg$c45 = /^[1-9]/,\n        peg$c46 = { type: \"class\", value: \"[1-9]\", description: \"[1-9]\" },\n        peg$c47 = function(digits) {\n            return parseInt(digits, 10);\n        },\n        peg$c48 = /^[^{}\\\\\\0-\\x1F \\t\\n\\r]/,\n        peg$c49 = { type: \"class\", value: \"[^{}\\\\\\\\\\\\0-\\\\x1F\\\\x7f \\\\t\\\\n\\\\r]\", description: \"[^{}\\\\\\\\\\\\0-\\\\x1F\\\\x7f \\\\t\\\\n\\\\r]\" },\n        peg$c50 = \"\\\\\\\\\",\n        peg$c51 = { type: \"literal\", value: \"\\\\\\\\\", description: \"\\\"\\\\\\\\\\\\\\\\\\\"\" },\n        peg$c52 = function() { return '\\\\'; },\n        peg$c53 = \"\\\\#\",\n        peg$c54 = { type: \"literal\", value: \"\\\\#\", description: \"\\\"\\\\\\\\#\\\"\" },\n        peg$c55 = function() { return '\\\\#'; },\n        peg$c56 = \"\\\\{\",\n        peg$c57 = { type: \"literal\", value: \"\\\\{\", description: \"\\\"\\\\\\\\{\\\"\" },\n        peg$c58 = function() { return '\\u007B'; },\n        peg$c59 = \"\\\\}\",\n        peg$c60 = { type: \"literal\", value: \"\\\\}\", description: \"\\\"\\\\\\\\}\\\"\" },\n        peg$c61 = function() { return '\\u007D'; },\n        peg$c62 = \"\\\\u\",\n        peg$c63 = { type: \"literal\", value: \"\\\\u\", description: \"\\\"\\\\\\\\u\\\"\" },\n        peg$c64 = function(digits) {\n                return String.fromCharCode(parseInt(digits, 16));\n            },\n        peg$c65 = function(chars) { return chars.join(''); },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(\n        message,\n        null,\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n          p, ch;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column,\n          seenCR: details.seenCR\n        };\n\n        while (p < pos) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, found, location) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new peg$SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsemessageFormatPattern();\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatPattern() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsemessageFormatElement();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsemessageFormatElement();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatElement() {\n      var s0;\n\n      s0 = peg$parsemessageTextElement();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseargumentElement();\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageText() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$currPos;\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsechars();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$currPos;\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsechars();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s3 = [s3, s4, s5];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c1(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsews();\n        if (s1 !== peg$FAILED) {\n          s0 = input.substring(s0, peg$currPos);\n        } else {\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageTextElement() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsemessageText();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseargument() {\n      var s0, s1, s2;\n\n      s0 = peg$parsenumber();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c3.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (peg$c3.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c4); }\n            }\n          }\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          s0 = input.substring(s0, peg$currPos);\n        } else {\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseargumentElement() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c5;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c6); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseargument();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s6 = peg$c7;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c8); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseelementFormat();\n                  if (s8 !== peg$FAILED) {\n                    s6 = [s6, s7, s8];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = null;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 125) {\n                    s7 = peg$c9;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c11(s3, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseelementFormat() {\n      var s0;\n\n      s0 = peg$parsesimpleFormat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepluralFormat();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseselectOrdinalFormat();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseselectFormat();\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesimpleFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c12) {\n        s1 = peg$c12;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c14) {\n          s1 = peg$c14;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c16) {\n            s1 = peg$c16;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c17); }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c7;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsechars();\n              if (s6 !== peg$FAILED) {\n                s4 = [s4, s5, s6];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c18(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralFormat() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c19) {\n        s1 = peg$c19;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c20); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepluralStyle();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselectOrdinalFormat() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 13) === peg$c22) {\n        s1 = peg$c22;\n        peg$currPos += 13;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepluralStyle();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselectFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c25) {\n        s1 = peg$c25;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c7;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseoptionalFormatPattern();\n              if (s6 !== peg$FAILED) {\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseoptionalFormatPattern();\n                }\n              } else {\n                s5 = peg$FAILED;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c27(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselector() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 61) {\n        s2 = peg$c28;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsenumber();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsechars();\n      }\n\n      return s0;\n    }\n\n    function peg$parseoptionalFormatPattern() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseselector();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s4 = peg$c5;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsemessageFormatPattern();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parse_();\n                  if (s7 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s8 = peg$c9;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c10); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c30(s2, s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseoffset() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 7) === peg$c31) {\n        s1 = peg$c31;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenumber();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c33(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralStyle() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseoffset();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseoptionalFormatPattern();\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseoptionalFormatPattern();\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c34(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsews() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c36.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c37); }\n          }\n        }\n      } else {\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsews();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsews();\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedigit() {\n      var s0;\n\n      if (peg$c39.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehexDigit() {\n      var s0;\n\n      if (peg$c41.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s1 = peg$c43;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = peg$currPos;\n        if (peg$c45.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsedigit();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsedigit();\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = input.substring(s1, peg$currPos);\n        } else {\n          s1 = s2;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c47(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsechar() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      if (peg$c48.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c50) {\n          s1 = peg$c50;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c52();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c53) {\n            s1 = peg$c53;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c54); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c55();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c56) {\n              s1 = peg$c56;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c57); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c58();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c59) {\n                s1 = peg$c59;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c60); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c61();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 2) === peg$c62) {\n                  s1 = peg$c62;\n                  peg$currPos += 2;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c63); }\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$currPos;\n                  s3 = peg$currPos;\n                  s4 = peg$parsehexDigit();\n                  if (s4 !== peg$FAILED) {\n                    s5 = peg$parsehexDigit();\n                    if (s5 !== peg$FAILED) {\n                      s6 = peg$parsehexDigit();\n                      if (s6 !== peg$FAILED) {\n                        s7 = peg$parsehexDigit();\n                        if (s7 !== peg$FAILED) {\n                          s4 = [s4, s5, s6, s7];\n                          s3 = s4;\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s2 = input.substring(s2, peg$currPos);\n                  } else {\n                    s2 = s3;\n                  }\n                  if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c64(s2);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsechars() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c65(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(\n        null,\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})();","/* jslint esnext: true */\n\nimport IntlMessageFormat from './core';\nimport defaultLocale from './en';\n\nIntlMessageFormat.__addLocaleData(defaultLocale);\nIntlMessageFormat.defaultLocale = 'en';\n\nexport default IntlMessageFormat;\n","// GENERATED FILE\nexport default {\"locale\":\"en\",\"pluralRuleFunction\":function (n,ord){var s=String(n).split(\".\"),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?\"one\":n10==2&&n100!=12?\"two\":n10==3&&n100!=13?\"few\":\"other\";return n==1&&v0?\"one\":\"other\"}};\n","// import IntlPolyfill from \"intl\";\n// import React from \"react\";\nimport IntlMessageFormat from \"intl-messageformat\";\nimport escapeHtml from \"escape-html\";\nimport cookie from \"cookie\";\nimport queryParser from \"querystring\";\nimport load from \"load-script\";\n// import invariant from \"invariant\";\n// import \"console-polyfill\";\n// import * as constants from \"./constants\";\n\n\nconst currency = [\"AFN\",\"EUR\",\"ALL\",\"DZD\",\"USD\",\"AOA\",\"XCD\",\"ARS\",\"AMD\",\"AWG\",\"AUD\",\"AZN\",\"BSD\",\"BHD\",\"BDT\",\"BBD\",\"BYN\",\"BZD\",\"XOF\",\"BMD\",\"INR\",\"BTN\",\"BOB\",\"BOV\",\"BAM\",\"BWP\",\"NOK\",\"BRL\",\"BND\",\"BGN\",\"BIF\",\"CVE\",\"KHR\",\"XAF\",\"CAD\",\"KYD\",\"CLP\",\"CLF\",\"CNY\",\"COP\",\"COU\",\"KMF\",\"CDF\",\"NZD\",\"CRC\",\"HRK\",\"CUP\",\"CUC\",\"ANG\",\"CZK\",\"DKK\",\"DJF\",\"DOP\",\"EGP\",\"SVC\",\"ERN\",\"ETB\",\"FKP\",\"FJD\",\"XPF\",\"GMD\",\"GEL\",\"GHS\",\"GIP\",\"GTQ\",\"GBP\",\"GNF\",\"GYD\",\"HTG\",\"HNL\",\"HKD\",\"HUF\",\"ISK\",\"IDR\",\"XDR\",\"IRR\",\"IQD\",\"ILS\",\"JMD\",\"JPY\",\"JOD\",\"KZT\",\"KES\",\"KPW\",\"KRW\",\"KWD\",\"KGS\",\"LAK\",\"LBP\",\"LSL\",\"ZAR\",\"LRD\",\"LYD\",\"CHF\",\"MOP\",\"MKD\",\"MGA\",\"MWK\",\"MYR\",\"MVR\",\"MRO\",\"MUR\",\"XUA\",\"MXN\",\"MXV\",\"MDL\",\"MNT\",\"MAD\",\"MZN\",\"MMK\",\"NAD\",\"NPR\",\"NIO\",\"NGN\",\"OMR\",\"PKR\",\"PAB\",\"PGK\",\"PYG\",\"PEN\",\"PHP\",\"PLN\",\"QAR\",\"RON\",\"RUB\",\"RWF\",\"SHP\",\"WST\",\"STD\",\"SAR\",\"RSD\",\"SCR\",\"SLL\",\"SGD\",\"XSU\",\"SBD\",\"SOS\",\"SSP\",\"LKR\",\"SDG\",\"SRD\",\"SZL\",\"SEK\",\"CHE\",\"CHW\",\"SYP\",\"TWD\",\"TJS\",\"TZS\",\"THB\",\"TOP\",\"TTD\",\"TND\",\"TRY\",\"TMT\",\"UGX\",\"UAH\",\"AED\",\"USN\",\"UYU\",\"UYI\",\"UZS\",\"VUV\",\"VEF\",\"VND\",\"YER\",\"ZMW\",\"ZWL\",\"XBA\",\"XBB\",\"XBC\",\"XBD\",\"XTS\",\"XXX\",\"XAU\",\"XPD\",\"XPT\",\"XAG\"];\nconst numberFormat = {};\nfor (var i = 0; i < currency.length; i++) {\n  numberFormat[currency[i]] = {\n    style: 'currency',\n    currency: currency[i]\n  };\n}\nconst defaultFormats = {\n  number: numberFormat\n}\n\n\nconst SYS_LOCALE_DATA_URL =\n  \"https://g.alicdn.com/alishu/common/0.0.86/locale-data\";\n\nlet isPolyfill = false;\nconst isBrowser = typeof window !== \"undefined\";\n\n// if (isBrowser) {\n//   if (typeof window.Intl === \"undefined\") {\n//     window.Intl = IntlPolyfill;\n//     isPolyfill = true;\n//   }\n// } else {\n//   global.Intl = IntlPolyfill;\n// }\n\nString.prototype.defaultMessage = String.prototype.d = function (msg) {\n  return this || msg || \"\";\n};\n\nclass ReactIntlUniversal {\n  constructor() {\n    this.options = {\n      currentLocale: null, // Current locale such as 'en-US'\n      urlLocaleKey: null, // URL's query Key to determine locale. Example: if URL=http://localhost?lang=en-US, then set it 'lang'\n      cookieLocaleKey: null, // Cookie's Key to determine locale. Example: if cookie=lang:en-US, then set it 'lang'\n      locales: {} // app locale data like {\"en-US\":{\"key1\":\"value1\"},\"zh-CN\":{\"key1\":\"值1\"}}\n    };\n  }\n\n  /**\n   * Get the formatted message by key\n   * @param {string} key The string representing key in locale data file\n   * @param {Object} variables Variables in message\n   * @returns {string} message\n   */\n  get(key, variables) {\n    // invariant(key, \"key is required\");\n    const { locales, currentLocale, formats } = this.options;\n\n    if (!locales || !locales[currentLocale]) {\n      return \"\";\n    }\n    let msg = this.getDescendantProp(locales[currentLocale], key);\n    if (msg == null) {\n      console.warn(\n        `intl-universal key \"${key}\" not defined in ${currentLocale}`\n      );\n      return \"\";\n    }\n    if (variables) {\n      variables = Object.assign({}, variables);\n      // HTML message with variables. Escape it to avoid XSS attack.\n      for (let i in variables) {\n        let value = variables[i];\n        if (\n          typeof value === \"string\" &&\n          value.indexOf(\"<\") >= 0 &&\n          value.indexOf(\">\") >= 0\n        ) {\n          value = escapeHtml(value);\n        }\n        variables[i] = value;\n      }\n    }\n\n    try {\n      msg = new IntlMessageFormat(msg, currentLocale, formats); // TODO memorize\n      msg = msg.format(variables);\n      return msg;\n    } catch (err) {\n      console.warn(\n        `intl-universal format message failed for key='${key}'`,\n        err\n      );\n      return \"\";\n    }\n  }\n\n  /**\n   * Get the formatted html message by key.\n   * @param {string} key The string representing key in locale data file\n   * @param {Object} variables Variables in message\n   * @returns {React.Element} message\n  */\n  // getHTML(key, variables) {\n  //   let msg = this.get(key, variables);\n  //   if (msg) {\n  //     const el = React.createElement(\"span\", {\n  //       dangerouslySetInnerHTML: {\n  //         __html: msg\n  //       }\n  //     });\n  //     // when key exists, it should still return element if there's defaultMessage() after getHTML()\n  //     const defaultMessage = () => el;\n  //     return Object.assign(\n  //       { defaultMessage: defaultMessage, d: defaultMessage },\n  //       el\n  //     );\n  //   }\n  //   return \"\";\n  // }\n\n  /**\n   * As same as get(...) API\n   * @param {Object} options \n   * @param {string} options.id \n   * @param {string} options.defaultMessage\n   * @param {Object} variables Variables in message\n   * @returns {string} message\n  */\n  formatMessage(messageDescriptor, variables) {\n    const { id, defaultMessage } = messageDescriptor;\n    return this.get(id, variables).defaultMessage(defaultMessage);\n  }\n\n  // /**\n  //  * As same as getHTML(...) API\n  //  * @param {Object} options \n  //  * @param {string} options.id \n  //  * @param {React.Element} options.defaultMessage\n  //  * @param {Object} variables Variables in message\n  //  * @returns {React.Element} message\n  // */\n  // formatHTMLMessage(messageDescriptor, variables) {\n  //   const { id, defaultMessage } = messageDescriptor;\n  //   return this.getHTML(id, variables).defaultMessage(defaultMessage);\n  // }\n\n  /**\n   * Helper: determine user's locale via URL, cookie, and browser's language.\n   * You may not this API, if you have other rules to determine user's locale.\n   * @param {string} options.urlLocaleKey URL's query Key to determine locale. Example: if URL=http://localhost?lang=en-US, then set it 'lang'\n   * @param {string} options.cookieLocaleKey Cookie's Key to determine locale. Example: if cookie=lang:en-US, then set it 'lang'\n   * @returns {string} determined locale such as 'en-US'\n   */\n  determineLocale(options = {}) {\n    return (\n      this.getLocaleFromURL(options) ||\n      this.getLocaleFromCookie(options) ||\n      this.getLocaleFromBrowser()\n    );\n  }\n\n  /**\n   * Initialize properties and load CLDR locale data according to currentLocale\n   * @param {Object} options\n   * @param {string} options.currentLocale Current locale such as 'en-US'\n   * @param {string} options.locales App locale data like {\"en-US\":{\"key1\":\"value1\"},\"zh-CN\":{\"key1\":\"值1\"}}\n   * @returns {Promise}\n   */\n  init(options = {}) {\n    // invariant(options.currentLocale, \"options.currentLocale is required\");\n    // invariant(options.locales, \"options.locales is required\");\n\n    Object.assign(this.options, options);\n\n    this.options.formats = Object.assign(\n      {},\n      this.options.formats,\n      defaultFormats\n    );\n\n    return new Promise((resolve, reject) => {\n      const lang = this.options.currentLocale.split(\"-\")[0];\n      if (isBrowser) {\n        if (isPolyfill) {          \n          load(`${SYS_LOCALE_DATA_URL}/${lang}.js`, (err, script) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve();\n            }\n          });\n        } else {\n          resolve();\n        }\n      } else {\n        // require(`intl/locale-data/jsonp/${lang}.js`);\n        // TODO rquired on demand\n        require(`intl/locale-data/jsonp/en.js`);\n        require(`intl/locale-data/jsonp/zh.js`);\n        require(`intl/locale-data/jsonp/fr.js`);\n        require(`intl/locale-data/jsonp/ja.js`);\n        require(`intl/locale-data/jsonp/de.js`);\n        require(`intl/locale-data/jsonp/es.js`);\n        require(`intl/locale-data/jsonp/ko.js`);\n        require(`intl/locale-data/jsonp/pt.js`);\n        require(`intl/locale-data/jsonp/it.js`);\n        resolve();\n      }\n    });\n  }\n\n  getLocaleFromCookie(options) {\n    const { cookieLocaleKey } = options;\n    if (cookieLocaleKey) {\n      let params = cookie.parse(document.cookie);\n      return params && params[cookieLocaleKey];\n    }\n  }\n\n  getLocaleFromURL(options) {\n    const { urlLocaleKey } = options;\n    if (urlLocaleKey) {\n      let query = location.search.split(\"?\");\n      if (query.length >= 2) {\n        let params = queryParser.parse(query[1]);\n        return params && params[urlLocaleKey];\n      }\n    }\n  }\n\n  getDescendantProp(locale, key) {\n    const msg = key.split(\".\").reduce(function(a, b) {\n      return (a != undefined) ? a[b] : a ;\n    }, locale);\n\n    return msg;\n  }\n\n  getLocaleFromBrowser() {\n    return navigator.language || navigator.userLanguage;\n  }\n}\n\nwindow.IntlUniversal = ReactIntlUniversal;\n\n// module.exports = new ReactIntlUniversal();\n","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n"],"names":["extend","obj","i","len","source","key","sources","Array","prototype","slice","call","arguments","length","hop","Compiler","locales","formats","pluralFn","this","StringFormat","id","PluralFormat","useOrdinal","offset","options","PluralOffsetString","numberFormat","string","SelectFormat","MessageFormat","message","ast","__parse","type","TypeError","_mergeFormats","defineProperty","value","_resolveLocale","_findPluralRuleFunction","_locale","pattern","_compilePattern","messageFormat","format","values","_format","e","variableId","Error","hasOwnProperty","prop","Object","stringifyPrimitive","v","isFinite","stringify","sep","eq","name","undefined","map","objectKeys","k","ks","encodeURIComponent","isArray","join","xs","f","res","push","parse","qs","regexp","split","maxKeys","kstr","vstr","x","replace","idx","indexOf","substr","decodeURIComponent","desc","__defineGetter__","get","objCreate","create","proto","props","F","compile","pluralStack","currentPlural","pluralNumberFormat","compileMessage","element","elements","compileMessageText","compileArgument","test","Intl","NumberFormat","number","style","date","DateTimeFormat","time","compileOptions","ordinal","optionsHash","option","selector","pop","String","getOption","other","peg$SyntaxError","expected","found","location","captureStackTrace","child","parent","ctor","constructor","peg$subclass","SyntaxError","input","peg$computeLocation","peg$savedPos","peg$currPos","peg$computePosDetails","pos","p","ch","details","peg$posDetailsCache","line","column","seenCR","charAt","startPos","endPos","startPosDetails","endPosDetails","start","end","peg$fail","peg$maxFailPos","peg$maxFailExpected","peg$parsestart","peg$parsemessageFormatPattern","s0","s1","s2","peg$parsemessageFormatElement","peg$FAILED","peg$c0","s3","s4","s5","peg$parse_","peg$parsechars","peg$c1","peg$parsews","substring","peg$parsemessageText","peg$c2","peg$parsemessageTextElement","s6","s7","s8","charCodeAt","peg$c5","peg$silentFails","peg$c6","peg$parsenumber","peg$c3","peg$c4","peg$parseargument","peg$c7","peg$c8","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$parsesimpleFormat","peg$c19","peg$c20","peg$parsepluralStyle","peg$c21","peg$parsepluralFormat","peg$c22","peg$c23","peg$c24","peg$parseselectOrdinalFormat","peg$c25","peg$c26","peg$parseoptionalFormatPattern","peg$c27","peg$parseselectFormat","peg$parseelementFormat","peg$c9","peg$c10","peg$c11","peg$parseargumentElement","peg$c28","peg$c29","peg$parseselector","peg$c30","peg$c31","peg$c32","peg$c33","peg$parseoffset","peg$c34","peg$c36","peg$c37","peg$c35","peg$c38","peg$parsedigit","peg$c39","peg$c40","peg$parsehexDigit","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$parsechar","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$result","peg$startRuleFunctions","peg$startRuleFunction","text","j","outerLen","inner","innerLen","messageText","description","pluralStyle","digits","parseInt","fromCharCode","chars","startRule","sort","a","b","splice","cleanupExpected","expectedDesc","foundDesc","expectedDescs","s","hex","toString","toUpperCase","stringEscape","buildMessage","peg$buildException","enumerable","currency","percent","short","month","day","year","medium","long","full","weekday","hour","minute","second","timeZoneName","data","locale","__localeData__","toLowerCase","parser","writable","resolvedOptions","localeData","pluralRuleFunction","parentLocale","part","err","result","defaults","mergedType","mergedFormats","concat","defaultLocale","localeParts","__addLocaleData","n","ord","v0","t0","Number","n10","n100","IntlMessageFormat","matchHtmlRegExp","str","match","exec","escape","html","index","lastIndex","opt","pairs","pairSplitRegExp","dec","decode","pair","eq_idx","trim","val","tryDecode","enc","encode","fieldContentRegExp","maxAge","isNaN","Math","floor","domain","path","expires","toUTCString","httpOnly","secure","sameSite","keys","defaultFormats","isBrowser","window","defaultMessage","d","msg","ReactIntlUniversal","variables","currentLocale","getDescendantProp","warn","assign","escapeHtml","messageDescriptor","getLocaleFromURL","getLocaleFromCookie","getLocaleFromBrowser","Promise","resolve","reject","_this","cookieLocaleKey","params","cookie","document","urlLocaleKey","query","search","queryParser","reduce","navigator","language","userLanguage","IntlUniversal"],"mappings":"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"}